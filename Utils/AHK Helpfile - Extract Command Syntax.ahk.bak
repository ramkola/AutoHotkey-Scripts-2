#Include C:\Users\Mark\Desktop\Misc\AutoHotkey Scripts
#Include lib\misc.ahk
#Include lib\constants.ahk
#Include lib\strings.ahk
#Include lib\ahk_word_lists.ahk
#NoEnv
#NoTrayIcon
#SingleInstance Force
SendMode Input
SetWorkingDir %AHK_MY_ROOT_DIR%

WinActivate, ahk_class dbgviewClass ahk_exe Dbgview.exe
OutputDebug, DBGVIEWCLEAR
WinActivate, ahk_class Notepad++ ahk_exe notepad++.exe

extension_period_pos := instr(A_ScriptName, ".", -1) 
fname_no_ext := Substr(A_ScriptName,1, extension_period_pos) 
out_file := AHK_MY_ROOT_DIR "\zzz-" fname_no_ext "txt" 
write_string := ""
FileDelete, %out_file% 

html_dir := A_WorkingDir "\misc\html_source\"
already_ran := True
If Not already_ran
    get_helpfile_source_pages(html_dir)

html_doc := ComObjCreate("HTMLfile")
file_pattern := html_dir "*.htm"
countx := 0

html_doc := ComObjCreate("HTMLfile")
Loop, Files, %file_pattern%
{
    FileRead, html, %A_LoopFileFullPath%
    OutputDebug, % "--- " A_LoopFileName " ---"
    ; FileAppend, Words from: %A_LoopFileName%`n, %out_file% 
    html_doc.open()
    html_doc.Write(html)
    html_doc.close()
    Sleep 0         ; performs unreliably without this in

    syntax_texts := html_doc.getElementsByClassname("Syntax")    ;[0].InnerText
    optional_texts := html_doc.getElementsByClassname("optional")    ;[0].InnerText
    i_index := 0
    Loop
    {
        Try 
            syntax_text := syntax_texts[i_index].InnerText 
        catch
            break   ; end of syntax tags exit loop
        Try optional_text := optional_texts[i_index].InnerText
        ;
        syntax_text := strreplace(syntax_text, optional_text, "[" optional_text "]")
        OutputDebug, % syntax_text
        i_index++
    }
}    

ExitApp

^p::Pause
^x::ExitApp
